stages:
  - create
  - test
  - deploy

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# ======= UTILITIES =======
.ssh-client:
  image: alpine:latest
  before_script:
    - apk add openssh openssl && mkdir ~/.ssh/
    - echo "$SSH_PRIVATE_KEY" | openssl base64 -A -d > ~/.ssh/id_rsa && chmod 0400 ~/.ssh/id_rsa
    - echo -e "Host $SSH_HOST\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

# ======= LINTERS [PHP] =======
php:lint:
  stage: create
  image: composer:latest
  variables:
    PHP_CS_FIXER_IGNORE_ENV: 1
  script:
    - mkdir src && ls -A | grep -v src | xargs mv -t src
    - git clone https://github.com/magento/magento-coding-standard.git && cd magento-coding-standard
    - composer install --ignore-platform-reqs
    - vendor/bin/phpcs -s -p --colors --extensions=php --standard=Magento2 ../src/
    - composer require friendsofphp/php-cs-fixer:3.4.0
    - vendor/bin/php-cs-fixer fix --config=../src/.php-cs-fixer.dist.php --dry-run --diff ../src/

php:compat:
  stage: create
  image: registry.gitlab.com/pipeline-components/php-codesniffer:latest
  variables:
    PHP_CS_FIXER_IGNORE_ENV: 1
  parallel:
    matrix:
      - PHP_VERSION: ["7.4", "8.1"]
  script:
    - phpcs -s -p --colors --extensions=php --standard=PHPCompatibility --runtime-set testVersion $PHP_VERSION .

# ======= REVIEW INSTANCES =======
.review:
  extends: .ssh-client
  stage: create
  variables:
    REVIEW_INSTANCE: magento_ee_$CI_MERGE_REQUEST_IID
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY_DEV
    SSH_HOST:        $SSH_HOST_DEV
    SSH_PATH:        /var/www/$REVIEW_INSTANCE
  environment:
    name: review/$CI_MERGE_REQUEST_IID
  rules:
    - if: $CI_MERGE_REQUEST_ID
  resource_group: review

# Magento
review:create:
  extends: .review
#  needs:
#    - test:unit
  variables:
    PHP_VERSION: "8.1"
    COMPOSER_VERSION: ""
    PHP_CLI: php$PHP_VERSION
    COMPOSER_CLI: composer$COMPOSER_VERSION
  environment:
    url: https://qa${CI_MERGE_REQUEST_IID}-ee.${DEPLOY_HOST_DEV}
    on_stop: review:detach
  script:
    - ssh "magento@$SSH_HOST"
      "[ ! -f '$SSH_PATH/app/etc/config.php' ] && {
        rm -rf $SSH_PATH &&
        cp -r /home/magento/magento-cloud-245-source $SSH_PATH &&
        $PHP_CLI /usr/local/bin/$COMPOSER_CLI global config http-basic.repo.magento.com '$MAGENTO_REPOSITORY_USER' '$MAGENTO_REPOSITORY_PASSWORD' &&
        mysql -umagento -pmagento -e 'DROP DATABASE IF EXISTS $REVIEW_INSTANCE; CREATE DATABASE $REVIEW_INSTANCE' &&
        mkdir -p $SSH_PATH/app/code/Hokodo/BnplCommerce/ ;
      } || echo 'Magento project exists in $SSH_PATH, skipping prerequisites.'"
    - scp -r * "magento@$SSH_HOST:$SSH_PATH/app/code/Hokodo/BnplCommerce/"
    - ssh "magento@$SSH_HOST"
      "cd $SSH_PATH;
      $PHP_CLI /usr/local/bin/$COMPOSER_CLI require hokodo/magento-bnpl:dev-master;
      [ ! -f '$SSH_PATH/app/etc/config.php' ] && {
        $PHP_CLI bin/magento setup:install --no-interaction
          --use-rewrites=1
          --base-url='$CI_ENVIRONMENT_URL'
          --backend-frontname=admin
          --language=en_GB
          --currency=GBP
          --timezone=Europe/London
          --db-name=$REVIEW_INSTANCE
          --db-user=magento
          --db-password=magento
          --admin-firstname='Hokodo'
          --admin-lastname='BNPL'
          --admin-email='tech@hokodo.co'
          --admin-user='$MAGENTO_ADMIN_USER'
          --admin-password='$MAGENTO_ADMIN_PASSWORD'
          --amqp-host="localhost"
          --amqp-port="5672"
          --amqp-user="guest"
          --amqp-password="guest"
          --amqp-virtualhost="/" &&
        $PHP_CLI bin/magento deploy:mode:set developer &&
        $PHP_CLI bin/magento config:set catalog/search/elasticsearch7_index_prefix '${REVIEW_INSTANCE}' &&
        $PHP_CLI bin/magento config:set payment/hokodo_bnpl/active 1 &&
        $PHP_CLI bin/magento config:set payment/hokodo_bnpl/environment dev &&
        $PHP_CLI bin/magento config:set payment/hokodo_bnpl/dev_api_key '$HOKODO_API_KEY_DEV' &&
        $PHP_CLI bin/magento config:set payment/hokodo_bnpl/dev_sdk_key '$HOKODO_SDK_KEY_DEV' &&
        $PHP_CLI bin/magento config:set payment/hokodo_bnpl/create_invoice_on_payment_accepted 1 &&
        $PHP_CLI bin/magento config:set payment/hokodo_bnpl/capture_online 1 &&
        $PHP_CLI bin/magento config:set payment/hokodo_bnpl/advanced/entity_level 'customer' &&
        $PHP_CLI bin/magento module:disable Magento_TwoFactorAuth;
        echo '{}' > ./auth.json &&
        $PHP_CLI /usr/local/bin/$COMPOSER_CLI config --file=./auth.json http-basic.repo.magento.com '$MAGENTO_REPOSITORY_USER' '$MAGENTO_REPOSITORY_PASSWORD';
      } || echo 'Magento project was installed with sample data, skipping configuration.'"
    # Magento commands: setup:upgrade => setup:di:compile => cache:flush
    - ssh "magento@$SSH_HOST" "cd $SSH_PATH && $PHP_CLI bin/magento module:disable Magento_TwoFactorAuth &&
      $PHP_CLI bin/magento se:up && $PHP_CLI bin/magento se:d:c &&
      $PHP_CLI bin/magento c:f &&
      $PHP_CLI app/code/Hokodo/BnplCommerce/Test/Fixtures/create-customers.php '$HOKODO_TEST_CUSTOMER_PASSWORD' &&
      $PHP_CLI bin/magento config:set payment/hokodo_bnpl/advanced/entity_level 'customer' &&
      $PHP_CLI bin/magento ca:cl config"

review:detach:
  extends: .review
  needs:
    - review:create
  variables:
    GIT_STRATEGY: none  # no git checkout!
  environment:
    action: stop
  when: manual
  script:
    - ssh "magento@$SSH_HOST"
      "rm -rf $SSH_PATH &&
      mysql -umagento -pmagento -e 'DROP DATABASE IF EXISTS $REVIEW_INSTANCE' &&
      curl -XDELETE 'http://localhost:9200/${REVIEW_INSTANCE}_*'"

## ======= E2E TESTS =======
.end-to-end-tests: &end-to-end-tests
  image: mcr.microsoft.com/playwright:v1.26.0-focal
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID

Playwright Smoke Test:
  <<: *end-to-end-tests
  needs:
    - review:create
  allow_failure: false
  artifacts:
    when: always
    paths:
      - playwright-report/
    expire_in: 1 week
  variables:
    BASE_URL: https://qa${CI_MERGE_REQUEST_IID}-ee.${DEPLOY_HOST_DEV}
  script:
    - npm install
    - npx playwright install --with-deps
    - >
      HOKODO_API_KEY=$HOKODO_API_KEY_DEV
      HOKODO_API_BASE_URL=https://api-dev.hokodo.co
      MAGENTO_ADMIN_USER=$MAGENTO_ADMIN_USER
      BASE_URL=$BASE_URL
      npx playwright test -g "Placing and fulfilling a Registered Company's first Order"
      --config ./tests/playwright/playwright.config.ts

All Playwright:
  <<: *end-to-end-tests
  needs:
    - review:create
  when: manual
  allow_failure: false
  artifacts:
    when: always
    paths:
      - playwright-report/
    expire_in: 1 week
  variables:
    BASE_URL: https://qa${CI_MERGE_REQUEST_IID}-ee.${DEPLOY_HOST_DEV}
  script:
    - npm install
    - npx playwright install --with-deps
    - >
      HOKODO_API_KEY=$HOKODO_API_KEY_DEV
      HOKODO_API_BASE_URL=https://api-dev.hokodo.co
      MAGENTO_ADMIN_USER=$MAGENTO_ADMIN_USER
      BASE_URL=$BASE_URL
      npx playwright test
      --config ./tests/playwright/playwright.config.ts

## ======= DEPLOYMENT =======
.deploy:
  extends: .ssh-client
  stage: deploy
#  needs:
#    - test:unit
  variables:
    PHP_VERSION: "8.1"
    PHP_CLI: php$PHP_VERSION
    COMPOSER_CLI: composer
  script:
    - ssh "magento@$SSH_HOST" "cd $SSH_PATH/app/code/ && rm -rf * && mkdir -p Hokodo/BnplCommerce/"
    - ssh "magento@$SSH_HOST" "cd $SSH_PATH && rm -rf vendor/hokodo"
    - ssh "magento@$SSH_HOST" "cd $SSH_PATH && $PHP_CLI /usr/local/bin/$COMPOSER_CLI require hokodo/magento-bnpl:dev-master"
    - scp -r * "magento@$SSH_HOST:$SSH_PATH/app/code/Hokodo/BnplCommerce/"
    - ssh "magento@$SSH_HOST"
      "cd $SSH_PATH &&
      $PHP_CLI bin/magento config:set --lock-env payment/hokodo_bnpl/active 1 &&
      $PHP_CLI bin/magento config:set --lock-env payment/hokodo_bnpl/environment '$HOKODO_ENV'&&
      $PHP_CLI bin/magento config:set --lock-env payment/hokodo_bnpl/${HOKODO_ENV}_api_key '$HOKODO_API_KEY_SANDBOX' &&
      $PHP_CLI bin/magento config:set --lock-env payment/hokodo_bnpl/${HOKODO_ENV}_sdk_key '$HOKODO_SDK_KEY_SANDBOX'"
    # Magento commands: setup:upgrade => setup:di:compile => setup:static-content:deploy => cache:flush
    - ssh "magento@$SSH_HOST" "cd $SSH_PATH && $PHP_CLI bin/magento se:up && $PHP_CLI bin/magento se:d:c && $PHP_CLI bin/magento se:s:d && $PHP_CLI bin/magento c:f"

.deploy-dev:
  extends: .deploy
  variables:
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY_DEV
    SSH_HOST:        $SSH_HOST_DEV
    SSH_PATH:        ~/public_html_ee
    HOKODO_ENV:      sandbox
    HOKODO_API_KEY:  $HOKODO_API_KEY_SANDBOX
  resource_group: deploy-dev

deploy:dev:
  extends: .deploy-dev
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy:dev:manual:
  extends: .deploy-dev
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  when: manual
